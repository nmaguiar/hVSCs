# Author: Nuno Aguiar
todo:
#- Setup reverse proxy
- Start SSH daemon
- Start docker
#- Install VSCode extensions
#- Prepare VSC settings
- Start K3D
- Start K3D socks server
- Report

ojob:
  async       : true
  opacks      :
  - openaf: 20220822
  - oJob-common
  catch       : if (isDef(exception.javaException)) exception.javaException.printStackTrace(); else printErr(exception)
  logToConsole: true   # to change when finished
  argsFromEnvs: true
  numThreads  : 6

include:
- ojob.yaml

jobs:
- name: Report
  type: shutdown
  to  : ojob report

# ============================
- name : Set SSH user password
  exec : |
    if (isDef(getEnv("SSH_PASS"))) {
      log("Setting SSH user password...")
      $sh("echo \"user:$SSH_PASS\" | sudo chpasswd")
      .prefix("chpasswd")
      .exec()
    }

# =======================
- name : Start SSH daemon
  from :
  - Set SSH user password
  lang : shell
  exec : |
    {{#if NOSSH}}
    echo SSH not started
    {{else}}
    sudo service ssh start
    {{/if}}

# ===================
- name : Start docker
  lang : shell
  exec : |
    {{#if NODOCKER}}
    echo Docker not started
    {{else}}
    sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
    echo updated
    sudo service docker start 
    {{/if}}

# -------------------------------
- name : Wait for Docker to start
  exec : |
    var ec
    do {
      sleep(1000, true)
      ec = $sh("docker version").get(0).exitcode
    } while(ec != 0)
    log("Docker is ready")

# ================
- name : Start K3D
  from : Wait for Docker to start
  lang : shell
  exec : |
    {{#if NOK8S}}
      echo K8S not started
    {{else}}
      echo K3D creating
      echo creating > /tmp/.kube
      {{#if NOPUBLIC}}
      k3d cluster create --k3s-arg "--snapshotter=native@server:*" --registry-create registry:5000 -p "127.0.0.1:1080:1080@loadbalancer"
      {{else}}
      k3d cluster create --k3s-arg "--snapshotter=native@server:*" --registry-create registry:5000 -p "0.0.0.0:1080:1080@loadbalancer"
      {{/if}}
      echo created > /tmp/.kube
      echo K3D creation end
    {{/if}}

# =============================
- name : Start K3D socks server
  deps :
  - Start K3D
  lang : shell
  exec : |
    #!/usr/bin/env bash

    {{#if NOK8S}}
    {{#if NODOCKER}}{{else}}
    docker run --rm -d -p 1080:1080 nmaguiar/socksd 
    {{/if}}
    {{else}}
    while (! kubectl version --output=json > /dev/null 2>&1 ); do
      sleep 1
    done

    /usr/bin/ojob ojob.io/kube/genSocksServer | kubectl -n kube-system apply -f - 
    kubectl expose -n kube-system deploy socks-server --type=LoadBalancer
    #while [[ $(kubectl get pods -n kube-system -l app=socks-server -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do
    #  sleep 2
    #done
    {{/if}}
